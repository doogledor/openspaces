{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Anchor","props","contentRef","useRef","ref","className","children","Toolip","targetRef","tooltipRef","useState","style","left","top","visibility","state","setState","visible","setVisibility","onWheel","e","mouseOver","preventDefault","stopPropagation","useEffect","current","addEventListener","mouseOut","removeEventListener","tooltipRect","getBoundingClientRect","targetBbox","Math","floor","x","width","y","height","onMouseOver","onMouseOut","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAwBA,SAASA,EAAOC,GACd,IAAMC,EAAaC,iBAAO,MAE1B,OACE,sBAAKC,IAAKF,EAAYG,UAAU,SAAhC,UACE,qBAAKA,UAAU,UAAf,SAA0BJ,EAAMK,WAChC,cAACC,EAAD,CAAQF,UAAU,SAASG,UAAWN,EAAtC,uBASN,SAASK,EAAT,GAA0C,IAAxBC,EAAuB,EAAvBA,UAAWF,EAAY,EAAZA,SACrBG,EAAaN,iBAAO,MADa,EAEbO,mBAAS,CACjCC,MAAO,CAAEC,KAAM,EAAGC,IAAK,EAAGC,WAAY,YAHD,mBAEhCC,EAFgC,KAEzBC,EAFyB,OAKHN,mBAAS,CAC3CO,SAAS,IAN4B,mBAKhCH,EALgC,KAKpBI,EALoB,KAyCvC,SAASC,EAAQC,GACfF,EAAc,CAAED,SAAS,IAG3B,SAASI,EAAUD,GAIjB,OAHAA,EAAEE,iBACFF,EAAEG,kBACFL,EAAc,CAAED,SAAS,KAClB,EAxCTO,qBAAU,WAOR,OANIhB,EAAUiB,UACZjB,EAAUiB,QAAQC,iBAAiB,YAAaL,GAChDb,EAAUiB,QAAQC,iBAAiB,WAAYC,GAC/CnB,EAAUiB,QAAQC,iBAAiB,aAAcC,GACjDnB,EAAUiB,QAAQC,iBAAiB,QAASP,IAEvC,WACDX,EAAUiB,UACZjB,EAAUiB,QAAQG,oBAAoB,YAAaP,GACnDb,EAAUiB,QAAQG,oBAAoB,WAAYD,GAClDnB,EAAUiB,QAAQG,oBAAoB,aAAcD,GACpDnB,EAAUiB,QAAQG,oBAAoB,QAAST,OAGlD,CAACX,IAEJgB,qBAAU,WACR,GAAKV,EAAWG,SAAYR,EAAWgB,QAAvC,CACA,IAAMI,EAAcpB,EAAWgB,QAAQK,wBACjCC,EAAavB,EAAUiB,QAAQK,wBACrCd,EAAS,CACPL,MAAO,CACLC,KAAK,GAAD,OAAKoB,KAAKC,MAAMF,EAAWG,EAAIH,EAAWI,MAAQ,IAAlD,MACJtB,IAAI,GAAD,OAAKmB,KAAKC,MACXF,EAAWK,EAAIL,EAAWM,OAAS,EAAIR,EAAYQ,OAAS,GAD3D,MAGHvB,WAAY,gBAGf,CAACA,IAaJ,IAAMa,EAAW,SAACP,GAIhB,OAHAA,EAAEE,iBACFF,EAAEG,kBACFL,EAAc,CAAED,SAAS,KAClB,GAGT,OAAKH,EAAWG,QAGd,qBACEb,IAAKK,EACL6B,YAAajB,EACbkB,WAAYZ,EACZtB,UAAU,SACVM,MAAOI,EAAMJ,MALf,SAOGL,IAV2B,KAenBkC,MA9Gf,WACE,OACE,sBAAKnC,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,uDAEE,cAACL,EAAD,wBAEF,sBAAKK,UAAU,cAAf,yCAEE,cAACL,EAAD,qBACA,cAACA,EAAD,4BACA,cAACA,EAAD,4BACA,cAACA,EAAD,mCCHOyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ab8cc08c.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from 'react'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container-2\">\n        part of the Container for #2 with overflow\n        <Anchor>ANCHOR</Anchor>\n      </div>\n      <div className=\"container-3\">\n        part of the Container for #3\n        <Anchor>ANCHOR</Anchor>\n        <Anchor>ANCHOR item 2</Anchor>\n        <Anchor>ANCHOR item 3</Anchor>\n        <Anchor>ANCHOR item 4</Anchor>\n      </div>\n    </div>\n  )\n}\n\n/* --------------------\nmanaged by the user, separte from tooltip\n ----------------------*/\nfunction Anchor(props) {\n  const contentRef = useRef(null)\n\n  return (\n    <div ref={contentRef} className=\"anchor\">\n      <div className=\"content\">{props.children}</div>\n      <Toolip className=\"toolip\" targetRef={contentRef}>\n        TOOLIP\n      </Toolip>\n    </div>\n  )\n}\n/* --------------------\n\n ----------------------*/\nfunction Toolip({ targetRef, children }) {\n  const tooltipRef = useRef(null)\n  const [state, setState] = useState({\n    style: { left: 0, top: 0, visibility: 'hidden' },\n  })\n  const [visibility, setVisibility] = useState({\n    visible: false,\n  })\n\n  useEffect(() => {\n    if (targetRef.current) {\n      targetRef.current.addEventListener('mouseover', mouseOver)\n      targetRef.current.addEventListener('mouseout', mouseOut)\n      targetRef.current.addEventListener('mouseleave', mouseOut)\n      targetRef.current.addEventListener('wheel', onWheel)\n    }\n    return () => {\n      if (targetRef.current) {\n        targetRef.current.removeEventListener('mouseover', mouseOver)\n        targetRef.current.removeEventListener('mouseout', mouseOut)\n        targetRef.current.removeEventListener('mouseleave', mouseOut)\n        targetRef.current.removeEventListener('wheel', onWheel)\n      }\n    }\n  }, [targetRef])\n\n  useEffect(() => {\n    if (!visibility.visible || !tooltipRef.current) return\n    const tooltipRect = tooltipRef.current.getBoundingClientRect()\n    const targetBbox = targetRef.current.getBoundingClientRect()\n    setState({\n      style: {\n        left: `${Math.floor(targetBbox.x + targetBbox.width + 10)}px`,\n        top: `${Math.floor(\n          targetBbox.y + targetBbox.height / 2 - tooltipRect.height / 2,\n        )}px`,\n        visibility: 'visible',\n      },\n    })\n  }, [visibility])\n\n  function onWheel(e) {\n    setVisibility({ visible: false })\n  }\n\n  function mouseOver(e) {\n    e.preventDefault()\n    e.stopPropagation()\n    setVisibility({ visible: true })\n    return false\n  }\n\n  const mouseOut = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    setVisibility({ visible: false })\n    return false\n  }\n\n  if (!visibility.visible) return null\n\n  return (\n    <div\n      ref={tooltipRef}\n      onMouseOver={mouseOver}\n      onMouseOut={mouseOut}\n      className=\"toolip\"\n      style={state.style}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}